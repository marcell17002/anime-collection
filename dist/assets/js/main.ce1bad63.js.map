{"version":3,"file":"assets/js/main.ce1bad63.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAmCA;AA2BA;AACA;AACA;AAFA;AAKA;;;;;;;;;;;;;;;;;ACrEA;AACA;AACA;;AAEA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAIA;;AAEA;;;;;;;;;;;;;;;ACjBA;AACA;AAgBA;AAOA;;;;;;;;;;;;;;;;;;ACxBA;AACA;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AACA;AAEA;AACA;AAOA;AACA;;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AALA;AAFA;;AAcA;AACA;AACA;AAAA;AAIA;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;;;;;;;;;;;;;ACHA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://anime-tokopedia/./src/config/GraphQl/index.jsx","webpack://anime-tokopedia/./src/config/Router/index.jsx","webpack://anime-tokopedia/./src/config/fontAwesome/index.jsx","webpack://anime-tokopedia/./src/config/index.jsx","webpack://anime-tokopedia/./src/index.jsx","webpack://anime-tokopedia/./src/pages/App.jsx","webpack://anime-tokopedia/./src/pages/index.jsx","webpack://anime-tokopedia/./src/reportWebVitals.js","webpack://anime-tokopedia/./src/index.css","webpack://anime-tokopedia/./src/index.css?cfe4"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nconst ANIME_LIST = gql`\r\n    query ( $page: Int, $perPage: Int) {\r\n        Page (page: $page, perPage: $perPage) {\r\n            pageInfo {\r\n                total\r\n                currentPage\r\n                lastPage\r\n                hasNextPage\r\n                perPage\r\n            }\r\n            media {\r\n                id\r\n                coverImage {\r\n                  extraLarge\r\n                }\r\n                description\r\n                bannerImage\r\n                duration\r\n                favourites\r\n                trending\r\n                countryOfOrigin\r\n                type\r\n                episodes\r\n                season\r\n                isAdult\r\n                genres\r\n                seasonYear\r\n                title {\r\n                  userPreferred\r\n                }\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nconst ANIME_DETAILS = gql`\r\n    query ($id: Int) {\r\n        Media(id: $id) {\r\n            id\r\n            coverImage {\r\n              extraLarge\r\n            }\r\n            description\r\n            bannerImage\r\n            duration\r\n            favourites\r\n            trending\r\n            countryOfOrigin\r\n            type\r\n            episodes\r\n            season\r\n            isAdult\r\n            genres\r\n            seasonYear\r\n            title {\r\n              userPreferred\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\n\r\nexport const query = {\r\n    ANIME_LIST,\r\n    ANIME_DETAILS,\r\n}\r\n\r\nexport default query","import React from 'react'\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\r\nimport { Hero, Anime, Collection, Detail, CollectionDetail } from '../../pages'\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Routes>\r\n                <Route exact path=\"/\" element={<Anime />} />\r\n                <Route path=\"/collection\" element={<Collection />} />\r\n                <Route path=\"/collection-detail/:id\" element={<CollectionDetail />} />\r\n                <Route path=\"/detail/:id\" element={<Detail />} />\r\n            </Routes>\r\n        </BrowserRouter >\r\n    )\r\n}\r\n\r\nexport default Router","import { library } from '@fortawesome/fontawesome-svg-core'\r\nimport {\r\n    faCheckSquare,\r\n    faCheck,\r\n    faCoffee,\r\n    faFilm,\r\n    faClapperboard,\r\n    faClock,\r\n    faCalendar,\r\n    faFlag,\r\n    faHeart,\r\n    faTrash,\r\n    faPen,\r\n    faArrowRight,\r\n    faTimes\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport {\r\n    faInstagram,\r\n    faGithub,\r\n    faWhatsapp,\r\n    faLinkedin\r\n} from '@fortawesome/free-brands-svg-icons'\r\n\r\nlibrary.add(\r\n    faInstagram,\r\n    faGithub,\r\n    faWhatsapp,\r\n    faLinkedin,\r\n    faCheckSquare,\r\n    faCheck,\r\n    faCoffee,\r\n    faFilm,\r\n    faClapperboard,\r\n    faClock,\r\n    faCalendar,\r\n    faFlag,\r\n    faHeart,\r\n    faTrash,\r\n    faPen,\r\n    faArrowRight,\r\n    faTimes,\r\n)","import Router from \"./Router\";\r\nimport query from './GraphQl'\r\n\r\nexport { Router, query }","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './pages/App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react'\r\nimport { Router } from '../config'\r\nimport { ApolloProvider, ApolloClient, HttpLink, InMemoryCache } from \"@apollo/client\";\r\nimport '../config/fontAwesome'\r\n\r\nconst uri = 'https://graphql.anilist.co'\r\nconst client = new ApolloClient({\r\n  cache: new InMemoryCache(),\r\n  link: new HttpLink({\r\n    uri,\r\n    fetchOptions: {\r\n      method: \"POST\"\r\n    },\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Accept: \"application/json\"\r\n    }\r\n  })\r\n});\r\n\r\nconst App = () => {\r\n  return (\r\n    <ApolloProvider client={client}>\r\n      <Router />\r\n    </ApolloProvider>\r\n  )\r\n}\r\n\r\nexport default App","import Anime from \"./Anime\";\r\nimport Collection from \"./Collection\";\r\nimport CollectionDetail from \"./CollectionDetail\";\r\nimport Detail from \"./Detail\";\r\n\r\nexport { Anime, Collection, CollectionDetail, Detail }","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/index.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,SAAS;EACT;;cAEY;EACZ,mCAAmC;EACnC,kCAAkC;AACpC;;AAEA;EACE;aACW;AACb\",\"sourcesContent\":[\"body {\\n  margin: 0;\\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\\n    sans-serif;\\n  -webkit-font-smoothing: antialiased;\\n  -moz-osx-font-smoothing: grayscale;\\n}\\n\\ncode {\\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\\n    monospace;\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}